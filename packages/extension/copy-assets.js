// Script para copiar assets da extens√£o (multiplataforma)
const fs = require('fs');
const path = require('path');

function copyFile(src, dest) {
  try {
    // Criar diret√≥rio de destino se n√£o existir
    const destDir = path.dirname(dest);
    if (!fs.existsSync(destDir)) {
      fs.mkdirSync(destDir, { recursive: true });
    }
    
    // Copiar arquivo
    fs.copyFileSync(src, dest);
    console.log(`‚úÖ Copiado: ${src} ‚Üí ${dest}`);
  } catch (error) {
    console.error(`‚ùå Erro ao copiar ${src}:`, error.message);
    process.exit(1);
  }
}

function copyDirectory(src, dest) {
  try {
    // Criar diret√≥rio de destino
    if (!fs.existsSync(dest)) {
      fs.mkdirSync(dest, { recursive: true });
    }
    
    // Ler conte√∫do do diret√≥rio
    const items = fs.readdirSync(src);
    
    for (const item of items) {
      const srcPath = path.join(src, item);
      const destPath = path.join(dest, item);
      
      const stat = fs.statSync(srcPath);
      
      if (stat.isDirectory()) {
        copyDirectory(srcPath, destPath);
      } else {
        fs.copyFileSync(srcPath, destPath);
      }
    }
    
    console.log(`‚úÖ Diret√≥rio copiado: ${src} ‚Üí ${dest}`);
  } catch (error) {
    console.error(`‚ùå Erro ao copiar diret√≥rio ${src}:`, error.message);
    process.exit(1);
  }
}

console.log('üìÅ Copiando assets da extens√£o...');

// Criar diret√≥rio dist se n√£o existir
if (!fs.existsSync('dist')) {
  fs.mkdirSync('dist');
}

// Copiar arquivos individuais
copyFile('manifest.json', 'dist/manifest.json');
copyFile('popup.html', 'dist/popup.html');

// Copiar diret√≥rio icons
if (fs.existsSync('icons')) {
  copyDirectory('icons', 'dist/icons');
} else {
  console.log('‚ö†Ô∏è Diret√≥rio icons n√£o encontrado, pulando...');
}

console.log('‚úÖ Assets copiados com sucesso!');
